{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VinP1\\\\riotapp\\\\client\\\\src\\\\rank.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rank = _ref => {\n  _s();\n  let {\n    summonerId,\n    region\n  } = _ref;\n  console.log(summonerId);\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchRank = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/getRank`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: {\n            summonerId,\n            region\n          } // Use destructuring here\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch user');\n        }\n        const data = await response.json();\n      } catch (error) {}\n    };\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Rank, \"fQZRxy/+nAZ7NLS1X4dVhrlp8Go=\");\n_c = Rank;\nexport default Rank;\nvar _c;\n$RefreshReg$(_c, \"Rank\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Rank","_ref","_s","summonerId","region","console","log","data","setData","fetchRank","response","fetch","method","headers","body","ok","Error","json","error","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/VinP1/riotapp/client/src/rank.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Rank = ({ summonerId, region }) => {\r\n    console.log(summonerId);\r\n    \r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchRank = async () => {\r\n            try {\r\n              const response = await fetch(`http://localhost:8000/getRank`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: {summonerId, region} // Use destructuring here\r\n              });\r\n      \r\n              if (!response.ok) {\r\n                throw new Error('Failed to fetch user');\r\n              }\r\n      \r\n              const data = await response.json();\r\n            }\r\n            catch(error){\r\n\r\n            }\r\n        }\r\n\r\n    },[data])\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAChCI,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAM,CAACI,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAE;YAACX,UAAU;YAAEC;UAAM,CAAC,CAAC;QAC7B,CAAC,CAAC;;QAEF,IAAI,CAACM,QAAQ,CAACK,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QAEA,MAAMT,IAAI,GAAG,MAAMG,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpC,CAAC,CACD,OAAMC,KAAK,EAAC,CAEZ;IACJ,CAAC;EAEL,CAAC,EAAC,CAACX,IAAI,CAAC,CAAC;EAIX,oBACER,OAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACpB,EAAA,CApCIF,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}