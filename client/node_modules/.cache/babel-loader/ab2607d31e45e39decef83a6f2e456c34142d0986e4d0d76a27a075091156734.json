{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VinP1\\\\riotapp\\\\client\\\\src\\\\rank.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Rank = _ref => {\n  _s();\n  let {\n    summonerId,\n    region\n  } = _ref;\n  const [rankData, setRankData] = useState(null);\n  useEffect(() => {\n    const fetchRank = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/getRank`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            region,\n            summonerId\n          }) // Use destructuring here\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to fetch user');\n        }\n        const data = await response.json();\n        const soloRankData = data.rankInfo.find(rank => rank.queueType === 'RANKED_SOLO_5x5');\n        setRankData(soloRankData);\n      } catch (error) {\n        console.error('Error fetching rank data:', error);\n      }\n    };\n    fetchRank();\n  }, [region, summonerId]);\n  if (!rankData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading rank data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Solo Rank: \", rankData.tier, \" \", rankData.rank, \" \", rankData.leaguePoints, \" LP\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Wins: \", rankData.wins]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Losses: \", rankData.losses]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Hot Streak: \", rankData.hotStreak ? 'Yes' : 'No']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Rank, \"ERS0YKBvEVWp4MWm852SfDGjPEA=\");\n_c = Rank;\nexport default Rank;\nvar _c;\n$RefreshReg$(_c, \"Rank\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Rank","_ref","_s","summonerId","region","rankData","setRankData","fetchRank","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","soloRankData","rankInfo","find","rank","queueType","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","tier","leaguePoints","wins","losses","hotStreak","_c","$RefreshReg$"],"sources":["C:/Users/VinP1/riotapp/client/src/rank.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Rank = ({ summonerId, region }) => {\r\n    \r\n    const [rankData, setRankData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchRank = async () => {\r\n            try {\r\n              const response = await fetch(`http://localhost:8000/getRank`, {\r\n                method: 'POST',\r\n                headers: {\r\n                  'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ region, summonerId }), // Use destructuring here\r\n              });\r\n      \r\n              if (!response.ok) {\r\n                throw new Error('Failed to fetch user');\r\n              }\r\n      \r\n              const data = await response.json();\r\n              const soloRankData = data.rankInfo.find((rank) => rank.queueType === 'RANKED_SOLO_5x5');\r\n              setRankData(soloRankData);\r\n            }\r\n            catch(error){\r\n                console.error('Error fetching rank data:', error);\r\n            }\r\n        }\r\n        fetchRank();\r\n\r\n    },[region,summonerId])\r\n\r\n    if (!rankData) {\r\n        return <p>Loading rank data...</p>;\r\n      }\r\n\r\n\r\n  return (\r\n    <div>\r\n      <p>Solo Rank: {rankData.tier} {rankData.rank} {rankData.leaguePoints} LP</p>\r\n      <p>Wins: {rankData.wins}</p>\r\n      <p>Losses: {rankData.losses}</p>\r\n      <p>Hot Streak: {rankData.hotStreak ? 'Yes' : 'No'}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,IAAI,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,UAAU;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAEhC,MAAM,CAACI,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACZ,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+BAA8B,EAAE;UAC5DC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEV,MAAM;YAAED;UAAW,CAAC,CAAC,CAAE;QAChD,CAAC,CAAC;;QAEF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QAEA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClC,MAAMC,YAAY,GAAGF,IAAI,CAACG,QAAQ,CAACC,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,KAAK,iBAAiB,CAAC;QACvFjB,WAAW,CAACa,YAAY,CAAC;MAC3B,CAAC,CACD,OAAMK,KAAK,EAAC;QACRC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IACDjB,SAAS,CAAC,CAAC;EAEf,CAAC,EAAC,CAACH,MAAM,EAACD,UAAU,CAAC,CAAC;EAEtB,IAAI,CAACE,QAAQ,EAAE;IACX,oBAAON,OAAA;MAAA2B,QAAA,EAAG;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACpC;EAGJ,oBACE/B,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,GAAG,aAAW,EAACrB,QAAQ,CAAC0B,IAAI,EAAC,GAAC,EAAC1B,QAAQ,CAACiB,IAAI,EAAC,GAAC,EAACjB,QAAQ,CAAC2B,YAAY,EAAC,KAAG;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC5E/B,OAAA;MAAA2B,QAAA,GAAG,QAAM,EAACrB,QAAQ,CAAC4B,IAAI;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B/B,OAAA;MAAA2B,QAAA,GAAG,UAAQ,EAACrB,QAAQ,CAAC6B,MAAM;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChC/B,OAAA;MAAA2B,QAAA,GAAG,cAAY,EAACrB,QAAQ,CAAC8B,SAAS,GAAG,KAAK,GAAG,IAAI;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA5CIF,IAAI;AAAAoC,EAAA,GAAJpC,IAAI;AA8CV,eAAeA,IAAI;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}