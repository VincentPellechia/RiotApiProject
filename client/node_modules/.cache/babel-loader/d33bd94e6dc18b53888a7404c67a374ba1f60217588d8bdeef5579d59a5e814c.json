{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VinP1\\\\riotapp\\\\client\\\\src\\\\user.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport MatchList from './matchList.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = _ref => {\n  _s();\n  let {\n    userId\n  } = _ref;\n  const [userInfo, setUserInfo] = useState(null);\n  const [matches, setMatches] = useState([]);\n  const [matchInfoList, setMatchInfoList] = useState([]);\n  useEffect(() => {\n    // Fetch user's matches\n    const fetchMatches = async () => {\n      try {\n        const response = await fetch(`http://localhost:8000/getMatches`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            input: userId\n          })\n        });\n        const data = await response.json();\n        console.log(\"data is here \" + data);\n        setMatches(data.message);\n      } catch (error) {\n        console.error('Error fetching user matches:', error);\n      }\n    };\n    const fetchMatchInfo = async () => {\n      try {\n        const matchData = [];\n        for (const match of matches) {\n          const response = await fetch(`http://localhost:8000/getMatchInfo`, {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              input: match\n            })\n          });\n          if (response.ok) {\n            const data = await response.json();\n            matchData.push(data.message);\n          } else {\n            console.error('Error fetching match info:', response.status);\n          }\n        }\n        setMatchInfoList(matchData);\n      } catch (error) {\n        console.error('Error fetching match info:', error);\n      }\n    };\n    if (userId) {\n      fetchMatches();\n    }\n    if (matches) {\n      fetchMatchInfo();\n    }\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: JSON.stringify(userId)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), matches.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MatchList, {\n        userId: userId,\n        matches: matchInfoList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading user information...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(UserPage, \"oh862yb0allRFb37EgPoaJi26NI=\");\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","MatchList","jsxDEV","_jsxDEV","UserPage","_ref","_s","userId","userInfo","setUserInfo","matches","setMatches","matchInfoList","setMatchInfoList","fetchMatches","response","fetch","method","headers","body","JSON","stringify","input","data","json","console","log","message","error","fetchMatchInfo","matchData","match","ok","push","status","children","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/VinP1/riotapp/client/src/user.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport MatchList from './matchList.js';\r\n\r\nconst UserPage = ({ userId }) => {\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [matches, setMatches] = useState([]);\r\n  const [matchInfoList, setMatchInfoList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Fetch user's matches\r\n    const fetchMatches = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:8000/getMatches`, {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({ input: userId }),\r\n        });\r\n        const data = await response.json();\r\n        console.log(\"data is here \"+ data);\r\n        setMatches(data.message);\r\n      } catch (error) {\r\n        console.error('Error fetching user matches:', error);\r\n      }\r\n    };\r\n\r\n    const fetchMatchInfo = async () => {\r\n      try {\r\n        const matchData = [];\r\n        for (const match of matches) {\r\n          const response = await fetch(`http://localhost:8000/getMatchInfo`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ input: match }),\r\n          });\r\n\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            matchData.push(data.message);\r\n          } else {\r\n            console.error('Error fetching match info:', response.status);\r\n          }\r\n        }\r\n\r\n        setMatchInfoList(matchData);\r\n      } catch (error) {\r\n        console.error('Error fetching match info:', error);\r\n      }\r\n    };\r\n\r\n\r\n    if (userId) {\r\n      fetchMatches();\r\n    }\r\n    if(matches){\r\n      fetchMatchInfo();\r\n    }\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <p>{JSON.stringify(userId)}</p>\r\n      {matches.length > 0 ? (\r\n        <div>\r\n          <MatchList userId = {userId} matches={matchInfoList} />\r\n        </div>\r\n      ) : (\r\n        <p>Loading user information...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserPage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}